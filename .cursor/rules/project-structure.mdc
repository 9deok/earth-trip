---
alwaysApply: true
---

## 프로젝트 구조 가이드

- **엔트리 포인트**: [lib/main.dart](mdc:lib/main.dart)
  - `MultiProvider`로 전역 의존성 주입, `AppScaffold`로 홈 구성
  - 한국어 로케일 초기화: `initializeDateFormatting('ko_KR')`
- **전역 DI 구성**: [lib/app_providers.dart](mdc:lib/app_providers.dart)
  - `PlanRemoteDataSource` → `PlanRepository` → `GetPlansUseCase` 등록
- **플랜 기능(DDD 레이아웃)**: [lib/features/plan](mdc:lib/features/plan)
  - `domain/` 엔티티·레포지토리 인터페이스·유스케이스
  - `data/` 데이터소스·레포지토리 구현·더미데이터
  - `presentation/` 컨트롤러·페이지·위젯
- **에셋**: [assets/flags](mdc:assets/flags) (국기 아이콘)
- **설정**:
  - 패키지/에셋 선언: [pubspec.yaml](mdc:pubspec.yaml)
  - 분석 옵션/린트: [analysis_options.yaml](mdc:analysis_options.yaml)

## 개발 규칙 요약

- **의존성 주입**: 전역 의존성은 `app_providers.dart`에서 등록 후 화면에서 `context.read/watch`로 주입
- **기능 추가**: `domain → data → presentation` 순서로 타입과 구현을 확장
- **상태관리**: 화면 상태는 `ChangeNotifier` 기반 컨트롤러로 캡슐화하고 UI는 구독만 수행
- **에셋/로케일**: 에셋은 `pubspec.yaml`에 등록, 날짜/숫자 포맷은 `intl` 사용

## 빠른 네비게이션

- 앱 시작: [lib/main.dart](mdc:lib/main.dart)
- DI: [lib/app_providers.dart](mdc:lib/app_providers.dart)
- 플랜 유스케이스: [lib/features/plan/domain/usecases/get_plans_use_case.dart](mdc:lib/features/plan/domain/usecases/get_plans_use_case.dart)
- 플랜 레포지토리: [lib/features/plan/data/repositories/plan_repository_impl.dart](mdc:lib/features/plan/data/repositories/plan_repository_impl.dart)
- 원격 데이터소스: [lib/features/plan/data/datasource/plan_remote_data_source_impl.dart](mdc:lib/features/plan/data/datasource/plan_remote_data_source_impl.dart)
